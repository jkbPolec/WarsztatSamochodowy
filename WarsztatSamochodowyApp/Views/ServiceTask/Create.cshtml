@model WarsztatSamochodowyApp.DTO.ServiceTaskDto

@{
    ViewData["Title"] = "Create Service Task";
    var allParts = ViewBag.AllParts as List<Part>;
}

<h2>Create Service Task</h2>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control"/>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Price"></label>
        <input asp-for="Price" type="number" step="0.01" class="form-control"/>
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>

    <h4>Used Parts</h4>
    <table class="table table-bordered">
        <thead>
        <tr>
            <th>Part Name</th>
            <th>Price</th>
            <th>Quantity</th>
        </tr>
        </thead>
        <tbody>
        @if (allParts != null)
        {
            for (var i = 0; i < allParts.Count; i++)
            {
                <tr>
                    <td>@allParts[i].Name</td>
                    <td>@allParts[i].Price z≈Ç</td>
                    <td>
                        <input type="hidden" name="partIds" value="@allParts[i].Id"/>
                        <input type="number" name="quantities" min="0" value="0" class="form-control"/>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>

    <button type="submit" class="btn btn-primary">Create</button>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
