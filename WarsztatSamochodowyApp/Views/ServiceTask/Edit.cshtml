@model WarsztatSamochodowyApp.DTO.ServiceTaskDto

@{
    ViewData["Title"] = "Edytuj Zadanie Serwisowe";
    var allParts = ViewBag.AllParts as List<Part>;
    var usedPartsDict = Model.UsedParts?.ToDictionary(up => up.PartId, up => up.Quantity) ?? new Dictionary<int, int>();
}

<h1>Edytuj zadanie serwisowe</h1>

<h4>Zmień dane</h4>
<hr class="border-secondary"/>
<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit" method="post">
            <input type="hidden" asp-for="Id"/>
            <div asp-validation-summary="All" class="text-danger mb-3"></div>
            <div class="form-group mb-3">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control"/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Price" class="control-label">Cena usługi (bez części)</label>
                <input asp-for="Price" type="number" step="0.01" class="form-control"/>
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <h4 class="mt-4">Użyte części</h4>
            <div class="table-responsive">
                <table class="table table-dark table-bordered align-middle">
                    <thead>
                    <tr>
                        <th>Nazwa części</th>
                        <th>Cena jednostkowa</th>
                        <th style="width: 150px;">Ilość</th>
                    </tr>
                    </thead>
                    <tbody>
                    @if (allParts != null)
                    {
                        for (var i = 0; i < allParts.Count; i++)
                        {
                            var part = allParts[i];
                            var qty = usedPartsDict.GetValueOrDefault(part.Id, 0);
                            <tr>
                                <td>@part.Name</td>
                                <td>@part.Price.ToString("C")</td>
                                <td>
                                    <input type="hidden" name="partIds" value="@part.Id"/>
                                    <input type="number" name="quantities" min="0" value="@qty" class="form-control"/>
                                </td>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
            </div>

            <div class="form-group mt-4">
                <input type="submit" value="Zapisz zmiany" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div class="mt-4">
    <a asp-action="Index" class="btn btn-outline-secondary">
        <i class="bi bi-arrow-left me-2"></i>Powrót do listy
    </a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}